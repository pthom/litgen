// ============================================================================
// This file was autogenerated
// It is presented side to side with its source: class_adapt_test.h
// It is not used in the compilation
//    (see integration_tests/bindings/pybind_mylib.cpp which contains the full binding
//     code, including this code)
// ============================================================================

#include <nanobind/nanobind.h>
#include <nanobind/stl/string.h>
#include <nanobind/stl/function.h>
#include "mylib_main/mylib.h"

namespace py = nanobind;

// <litgen_glue_code>  // Autogenerated code below! Do not edit!

// </litgen_glue_code> // Autogenerated code end


void py_init_module_mylib(py::module_& m)
{
    // <litgen_pydef> // Autogenerated code below! Do not edit!
    ////////////////////    <generated_from:class_adapt_test.h>    ////////////////////
    auto pyClassColor4 =
        nb::class_<Color4>
            (m, "Color4", "")
        .def("__init__",
            [](Color4 * self, const std::array<uint8_t, 4>& _rgba)
            {
                auto ctor_wrapper = [](Color4* self, const uint8_t _rgba[4]) ->  void
                {
                    new(self) Color4(_rgba); // placement new
                };
                auto ctor_wrapper_adapt_fixed_size_c_arrays = [&ctor_wrapper](Color4 * self, const std::array<uint8_t, 4>& _rgba)
                {
                    ctor_wrapper(self, _rgba.data());
                };

                ctor_wrapper_adapt_fixed_size_c_arrays(self, _rgba);
            },
            nb::arg("_rgba"),
            "The constructor params will automatically be \"adapted\" into std::array<uint8_t, 4>")
        .def_prop_ro("rgba",
            [](Color4 &self) -> nb::ndarray<uint8_t, nb::numpy, nb::shape<4>, nb::c_contig>
            {
                return self.rgba;
            },
            "This member will be stored as a modifiable numpy array")
        ;
    ////////////////////    </generated_from:class_adapt_test.h>    ////////////////////

    // </litgen_pydef> // Autogenerated code end
}
